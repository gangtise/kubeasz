---
# tasks file for gangtise
- name: 在 node 节点创建相关目录
  file: path={{ item }} state=directory
  with_items:
  - /home/gangtise/yaml/

# DNS文件中部分参数根据hosts文件设置而定，因此需要用template模块替换参数
- name: 准备 gangtise 的部署文件
  template: src={{ item }}.yaml.j2 dest=/home/gangtise/yaml/{{ item }}.yaml
  with_items:
  - kuboard
  - metrics-server
  - spring-app-namespace
  - spring-config
  - gateway-config
  - gangtise-web-config
  - indicator-service-config
  - indicator-search-service-config
  - eureka
  - gangtise-gateway-service
  - gangtise-auth-service
  - gangtise-userinfo-service
  - gangtise-user-web
  - gangtise-userdata-industry
  - indicator-service
  - indicator-service-search

- name: 部署kuboard
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/{{ item }}.yaml"
  with_items:
  - kuboard
  - metrics-server
  run_once: true

- name: 创建配置信息部署
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/{{ item }}.yaml"
  with_items:
  - spring-app-namespace
  - spring-config
  - gateway-config
  - gangtise-web-config
  - indicator-service-config
  - indicator-search-service-config
  run_once: true

- name: 获取spring_app容器令牌
  command: "{{ bin_dir }}/kubectl get secret --namespace={{ spring_app_namespace }} "
  register: spring_app_secret_info
  run_once: true

- block:    
    - name: 删除spring_app容器令牌
      shell: "{{ bin_dir }}/kubectl delete secret {{ container_secret }} --namespace={{ spring_app_namespace }}"
      run_once: true
  when: 
  - '"kubernetes.io/dockerconfigjson" in spring_app_secret_info.stdout'
  ignore_errors: true

- name: 创建容器令牌
  shell: |
    {{ bin_dir }}/kubectl create secret docker-registry {{ container_secret }} --namespace={{ spring_app_namespace }} --docker-server={{ container_registry }} --docker-username={{ container_user }} --docker-password={{ container_password }}
  run_once: true

- name: 创建注册中心部署
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/eureka.yaml"
  run_once: true

- name: 创建网关部署
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/gangtise-gateway-service.yaml"
  run_once: true

- name: 创建OAuth部署
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/gangtise-auth-service.yaml"
  run_once: true

- name: 创建用户信息部署
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/gangtise-userinfo-service.yaml"
  run_once: true

- name: 创建用户信息部署页面
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/gangtise-user-web.yaml"
  run_once: true

- name: 创建用户数据中心
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/gangtise-userdata-industry.yaml"
  run_once: true

- name: 创建用户计算中心
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/indicator-service.yaml"
  run_once: true

- name: 创建用户查询中心
  shell: "{{ bin_dir }}/kubectl apply -f /home/gangtise/yaml/indicator-service-search.yaml"
  run_once: true

# - name: 轮询等待kafka crd达到Running状态
#   shell: "{{ bin_dir }}/kubectl get pod -n {{ kafka_namespace }} | grep strimzi-cluster-operator  | awk '{print $3}'"
#   register: kafka_status
#   until: kafka_status.stdout == "Running"
#   retries: 10
#   delay: 30
#   tags: kafka
#   run_once: true
