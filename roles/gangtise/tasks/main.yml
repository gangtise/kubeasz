---
# tasks file for gangtise
- name: 在 node 节点创建相关目录
  file: path={{ item }} state=directory
  with_items:
  - /opt/gangtise/

# DNS文件中部分参数根据hosts文件设置而定，因此需要用template模块替换参数
- name: 准备 gangtise 的部署文件
  template: src={{ item }}.yaml.j2 dest=/opt/gangtise/{{ item }}.yaml
  with_items:
  - eureka
  - gangtise-auth-service
  - gangtise-gateway-service
  - gangtise-userinfo-service
  - gts-keyboard-yhty
  - ignite
  - quark-control-server
  - quark-maxwell
  - quark-response-client
  - namespaces
  - spring-config

- name: 创建配置信息部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/{{ item }}.yaml"
  with_items:
  - spring-app-namespace
  - spring-config
  run_once: true

- name: 获取容器令牌
  command: "{{ bin_dir }}/kubectl get secret --all-namespaces"
  register: secret_info
  run_once: true

- block:    
    - name: 删除容器令牌
      shell: "{{ bin_dir }}/kubectl delete secret docker-registry gangtiseacr --all-namespaces"
      run_once: true
  when: 
  - '"gangtiseacr" in secret_info.stdout'
  ignore_errors: true


- name: 创建容器令牌
  shell: |
    {{ bin_dir }}/kubectl create secret docker-registry gangtiseacr --namespace={{ spring_app_namespace }} --docker-server={{ container_registry }} --docker-username={{ container_user }} --docker-password={{ container_password }}
    {{ bin_dir }}/kubectl create secret docker-registry gangtiseacr --namespace={{ ignite_namespace }} --docker-server={{ container_registry }} --docker-username={{ container_user }} --docker-password={{ container_password }}
  run_once: true

- name: 创建注册中心部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/eureka.yaml"
  run_once: true

- name: 创建网关部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/gangtise-gateway-service.yaml"
  run_once: true

- name: 创建OAuth部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/gangtise-auth-service.yaml"
  run_once: true

- name: 创建用户信息部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/gangtise-userinfo-service.yaml"
  run_once: true

- name: 创建按键精灵部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/gts-keyboard-yhty.yaml"
  run_once: true

- name: 创建ignite部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/ignite.yaml"
  run_once: true

- name: 创建ignite控制台部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/quark-control-server.yaml"
  run_once: true

- name: 创建ignite客户端服务部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/quark-response-client.yaml"
  run_once: true

- name: 创建maxwell部署
  shell: "{{ bin_dir }}/kubectl apply -f /opt/gangtise/quark-maxwell.yaml"
  run_once: true

- name: 创建kafka部署
  shell: "echeo 'kafka'"
  run_once: true

- name: 轮询等待ignite达到Running状态
  shell: "{{ bin_dir }}/kubectl get pod -n ignite | grep ignite-0  | awk '{print $3}'"
  register: ignite_status
  until: ignite_status.stdout == "Running"
  retries: 10
  delay: 30
  tags: ignite

- name: 配置ignite部署
  shell: |
    echo "hello"
    #"{{ bin_dir }}/kubectl exec -it ignite-0 -n ignite -- ./apache-ignite/bin/control.sh --activate --yes"
  run_once: true
  tags: ignite

- name: 轮询等待quark-control-server达到Running状态

  shell: "{{ bin_dir }}/kubectl get pod -n ignite | grep quark-control-server | awk '{print $3}'"
  register: ignite_control_status
  until: ignite_control_status.stdout == "Running"
  retries: 10
  delay: 30
  tags: ignite_control

