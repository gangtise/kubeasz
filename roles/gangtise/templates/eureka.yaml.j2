---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels: {}
  name: eureka
  namespace: {{ spring_app_namespace }}
spec:
  podManagementPolicy: Parallel
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: eureka
  serviceName: eureka
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: eureka
    spec:
      imagePullSecrets:
        - name: {{ container_secret }}
      containers:
        - env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: EUREKA_INSTANCE_HOSTNAME
              value: '${MY_POD_NAME}.eureka'
          envFrom:
            - configMapRef:
                name: spring-config
          image: {{ eureka_image }}
          imagePullPolicy: IfNotPresent      
          name: eureka
          ports:
            - containerPort: 1025
              protocol: TCP
          resources:
            limits:
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: eureka
  name: eureka
  namespace: {{ spring_app_namespace }}
spec:
  ports:
    - name: eureka
      nodePort: 23331
      port: 1025
      protocol: TCP
      targetPort: 1025
  selector:
    app: eureka
  sessionAffinity: None
  type: NodePort

