---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: gangtise-user-web
  name: gangtise-user-web
  namespace: {{ spring_app_namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: gangtise-user-web
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubesphere.io/containerSecrets: '{"container-nwbair":"azure-acr"}'
        logging.kubesphere.io/logsidecar-config: '{}'
      creationTimestamp: null
      labels:
        app: gangtise-user-web
    spec:
      affinity: {}
      imagePullSecrets:
        - name: {{ container_secret }}
      containers:
        - image: {{ gangtise_admin_image }}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - date
            failureThreshold: 3
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: container-nwbair
          ports:
            - containerPort: 80
              name: http-userweb
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /app/.env.production
              name: volume-ekkx6m
              readOnly: true
              subPath: app/.env.production
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: .env.production
                path: app/.env.production
            name: gangtise-web-config
          name: volume-ekkx6m

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gangtise-user-web
  name: gangtise-user-web
  namespace: {{ spring_app_namespace }}
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: http-userweb
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: gangtise-user-web
  sessionAffinity: None
  type: NodePort

