---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '2'
    k8s.kuboard.cn/ingress: 'false'
    k8s.kuboard.cn/service: ClusterIP
    k8s.kuboard.cn/workload: indicator-service
  generation: 2
  labels:
    k8s.kuboard.cn/layer: ''
    k8s.kuboard.cn/name: indicator-service
  name: indicator-service
  namespace: {{ spring_app_namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: ''
      k8s.kuboard.cn/name: indicator-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s.kuboard.cn/layer: ''
        k8s.kuboard.cn/name: indicator-service
    spec:
      imagePullSecrets:
        - name: {{ container_secret }}
      containers:
        - command:
            - bash
            - '-ec'
            - >
              java -jar -server
              -javaagent:/opt/skywalkingAgent/skywalking-agent.jar
              -Dskywalking.agent.service_name=${POD_NAME}
              -Dskywalking.collector.backend_service=skywalking-oap.skywalking-system:11800
              /app.jar
          env:
            - name: POD_NAME
              value: indicator-service
            - name: JVM_OPTS
              value: '-Xss1m -Xconcurrentio -XX:SurvivorRatio=4'
          envFrom:
            - configMapRef:
                name: spring-config
          image: {{ indicator_service_image }}
          imagePullPolicy: IfNotPresent
          lifecycle: {}
          name: indicator-service
          ports:
            - containerPort: 8091
              protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 960Mi
            requests:
              cpu: 500m
              memory: 250Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              mountPropagation: HostToContainer
              name: indicator-service
              readOnly: true
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seLinuxOptions: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: indicator-service-config
          name: indicator-service

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    k8s.kuboard.cn/workload: indicator-service
  creationTimestamp: '2020-12-14T02:19:53Z'
  labels:
    k8s.kuboard.cn/layer: ''
    k8s.kuboard.cn/name: indicator-service
  name: indicator-service
  namespace: {{ spring_app_namespace }}
spec:
  ports:
    - name: ypsbrd
      port: 8091
      protocol: TCP
      targetPort: 8091
  selector:
    k8s.kuboard.cn/layer: ''
    k8s.kuboard.cn/name: indicator-service
  sessionAffinity: None
  type: ClusterIP


